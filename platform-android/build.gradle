configurations {
    mobileLibrary
}

dependencies {
    compile project(':platform-common')
    implementation files('src/main/libs/com.fiskaly.kassensichv.sma.jar')
    mobileLibrary files('src/main/libs/com.fiskaly.kassensichv.sma.jar')
}

task copyAndroidDependencies {
    def basePath = 'build/sma-unpacked/'
    def smaAndroidBasePath = 'src/main/'
    def aarPath = '../sma/dist/com.fiskaly.kassensichv.sma-android.aar'
    def aar = file(aarPath)
    def archive = zipTree(aar)

    copy {
        from archive
        into file(basePath)
    }

    copy {
        from file(basePath + 'classes.jar')
        into file(smaAndroidBasePath + 'libs')
        rename { fileName ->
            fileName.replace 'classes', 'com.fiskaly.kassensichv.sma'
        }
    }

    copy {
        from file(basePath + 'jni')
        into file(smaAndroidBasePath + 'resources/lib')
    }
}

task copyLicenses {
    final BASE_PATH = '../sma/'
    final LIB_PATH = 'src/main/resources/lib'
    final LICENSES_TARGET = 'src/main/resources/3rd-party-licenses'
    final THIRD_PARTY_LICENSES_PATH = BASE_PATH + '3rd-party-licenses/'

    copy {
        from file(BASE_PATH + 'LICENSE')
        rename { fileName ->
            fileName.replace('LICENSE', 'SMA-LICENSE')
        }
        into LIB_PATH
    }

    copy {
        from fileTree(THIRD_PARTY_LICENSES_PATH)
        into LICENSES_TARGET
    }
}

jar {
    baseName = 'platform-android'

    from {
        configurations.mobileLibrary.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

